.expr-host { position: relative; display:block; max-width: 100%; }
.expr-host:not(.in-group) { width: 100%; }
.expr-host { -webkit-tap-highlight-color: transparent;  }
.expr-host.inline { /* overflow-x: auto; */ scrollbar-width: none !important;/*  padding-right: 3px !important; */ }
.expr-host.inline::-webkit-scrollbar { display: none !important;  }
.expr-host.inline .cm-editor { min-height: 32px; max-height: 32px; width: 100%; }
.cm-host { position: relative; flex:1; min-height: 30px; max-height: 200px; overflow: hidden; border:1px solid #d9d9d9; border-radius:6px; background:#fff; }
.cm-host.large { min-height: 160px; max-height: 360px; }
.cm-host.fullscreen { min-height: 70vh; max-height: 72vh; }
.cm-host.auto { max-height: 420px; }
.expr-host .cm-editor { height: auto; }
.expr-host .cm-scroller { max-height: inherit; overflow-y: auto; }
/* Remove default outlines from inner CM nodes */
.cm-host, .cm-host * { outline: none !important; }
.expr-host *:focus, .expr-host *:focus-visible { outline: none !important; }
.expr-host .cm-editor.cm-focused, .expr-host .cm-editor:focus-visible { outline: none !important; }
.expr-host .cm-editor .cm-scroller:focus, .expr-host .cm-editor .cm-content:focus { outline: none !important; }

/* Ant Design input focus style (exact match) */
.cm-host:focus-within {
  border-color: #40a9ff !important;
  box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2) !important;
  border-right-width: 1px; /* parity with .ant-input */
  outline: 0;
}

:host ::ng-deep .cm-scroller {
  scrollbar-width: none !important;
}

/* Fallback using :has for browsers that support it */
.cm-host:has(.cm-editor.cm-focused) {
  border-color: #40a9ff !important;
  box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2) !important;
  border-right-width: 1px;
  outline: 0;
}
.expr-host.inline .cm-host {    height: 32px;  }
/* When inside nz-input-group (prepend), blend borders */
.expr-group { max-width: 100%; width: 100%; display: inline-flex; }
/* In input-group, let host follow container and shrink */
.expr-group .expr-host.in-group { flex: 1 1 auto; min-width: 0; max-width: 100%; }
/* .expr-group .expr-host.in-group { flex: 1 1 auto; min-width: 0; } */
.expr-group { position: relative; }
/* Ant wrapper created by nz-input-group: ensure it stretches to container width */
:host ::ng-deep .ant-input-wrapper.ant-input-group { width: 100% !important; display: flex; align-items: stretch; }
:host ::ng-deep .ant-input-wrapper.ant-input-group > .ant-input-group-addon { flex: 0 0 auto; }
:host ::ng-deep .ant-input-wrapper.ant-input-group > .expr-host.in-group { flex: 1 1 auto; min-width: 0; max-width: 100%; }
.expr-host.in-group .cm-host {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
}
/* If no before addon, restore rounded left corners and border */
.expr-group.no-before .expr-host.in-group .cm-host {
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
  border-left: 1px solid #d9d9d9;
}

/* Floating expand button */
.expr-fab {
  position: absolute;
  right: 6px;
  bottom: 6px;
  width: 28px;
  height: 28px;
  border-radius: 4px;
  background: transparent;
  border: none;
  color: #94a3b8;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: none;
}
.expr-fab:hover { color:#1677ff; }

/* Drag preview caret */
.drop-caret {
  position: absolute;
  width: 2px;
  background: #1890ff;
  border-radius: 1px;
  z-index: 5;
  pointer-events: none;
}

/* Formula action button inside addon-before */
.expr-addon-btn {
  border: none;
  background: transparent;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: #7D838F;
  padding: 0;
  width: 32px;
  height: 32px;
  line-height: 32px;
}
.expr-addon-btn svg { width: 16px; height: 16px; display: block; }
.expr-addon-btn:hover { color: #1677ff; }
/* Ensure the addon gives full height to the button */
:host ::ng-deep .ant-input-group-addon { padding: 0 8px; display: flex; align-items: center; height: 32px; width: 32px }

/* Hover state like Ant Input */
.cm-host:hover {
  border-color: #40a9ff;
  border-right-width: 1px;
}

.cm-host {
  border-radius: 8px;
  transition: box-shadow 0.3s, background-color 0.3s, border-color 0.3s, color 0.3s;
}


/* Expression colors */
.cm-expr { color:#1677ff; font-weight:600; }
.cm-expr-valid { color:#52c41a; font-weight:600; }
.cm-expr-invalid { color:#ff4d4f; font-weight:600; }
.cm-expr-pending { color:#9ca3af; font-weight:600; }

:host ::ng-deep .cm-focused {
 outline: none !important; 
}
/* Ensure horizontal scrolling happens inside CM scroller (not page/host) */
.expr-host.inline { overflow: hidden; }
.expr-host.inline .cm-scroller { overflow-x: auto !important; overflow-y: hidden !important; }
.expr-host.inline .cm-scroller::-webkit-scrollbar { display: none; }
.expr-host.inline .cm-scroller { scrollbar-width: none; }
.cm-host { box-sizing: border-box; }
/* Custom autocomplete (n8n-like) */
.cm-tooltip.cm-tooltip-autocomplete {
  position: absolute;
  z-index: 10000;
  border: 1px solid #e5e7eb;
  background: #fff;
  box-shadow: 0 6px 16px rgba(0,0,0,.08), 0 3px 6px rgba(0,0,0,.05);
  border-radius: 8px;
  overflow: hidden;
}
.cm-tooltip-autocomplete ul { max-height: 260px; overflow-y:auto; overflow-x:hidden; margin:0; padding:6px 0; list-style:none; }
.cm-section-header { padding:6px 12px; background:#f8fafc; color:#64748b; font-weight:600; font-size:12px; }
.cm-section-title { margin:0; }
.cm-tooltip-autocomplete li[role="option"] { display:flex; justify-content:space-between; gap:16px; padding:6px 12px; cursor:pointer; }
.cm-tooltip-autocomplete li[role="option"]:hover { background:#f5faff; }
.cm-tooltip-autocomplete .cm-completionSelected { background:#e6f4ff; }
.cm-tooltip-autocomplete li[role="option"][aria-selected="true"] { background:#e6f4ff; }
.cm-tooltip-autocomplete li.active { background:#e6f4ff; }
.cm-completionLabel { font-size:12px; color:#0f172a; }
.cm-completionDetail { color:#94a3b8; font-size:11px; }
.cm-completionMatchedText { color:#1677ff; font-weight:600; }

/* Hide vertical scrollbar and enforce single line in inline mode */
.expr-host.inline .cm-content { white-space: nowrap; }
/* Host provides the visual inset around the editor */
.expr-host.inline .cm-host { padding-right: 11px; padding-left: 11px; }
/* Content itself has no extra padding (handled by host) */
.expr-host.inline .cm-content { padding: 0 !important; }
/* Scroller keeps only overflow behavior, padding handled by host */
.expr-host.inline .cm-scroller { padding: 0 !important; }

/* iOS mobile: prevent auto-zoom when focusing CodeMirror (contenteditable needs >=16px)
   Targeted only to expression editor to avoid global side effects */
/* (no mobile font-size override; use viewport meta to stop iOS auto-zoom) */



/* Info panel */
.cm-completionInfo {
  position: absolute;
  z-index: 10000;
  border: 1px solid #e5e7eb;
  background: #fff;
  box-shadow: 0 6px 16px rgba(0,0,0,.08), 0 3px 6px rgba(0,0,0,.05);
  border-radius: 8px;
  max-width: 380px;
  padding: 8px 12px;
}
.autocomplete-info-header { font-weight: 700; margin-bottom: 4px; }
.autocomplete-info-description { color:#475569; font-size: 12px; }
.expr-popover .ant-popover-inner { padding: 0; }
.expr-popover-body { display:flex; gap: 0; }
.expr-popover-left { max-height: 260px; overflow-y:auto; overflow-x:hidden; scrollbar-width: none; }
.expr-popover-left::-webkit-scrollbar { display: none; }
.expr-popover-left ul { margin:0; padding:6px 0; list-style:none; }
.expr-popover-left li[role="option"] { display:flex; justify-content:space-between; gap:16px; padding:6px 12px; cursor:pointer; }
.expr-popover-left li[role="option"]:hover { background:#f5faff; }
.expr-popover-left li[role="option"].active { background:#e6f4ff; }
.expr-popover-right { width: 360px; padding: 8px 12px; border-left: 1px solid #e5e7eb; }
.expr-origin { position:absolute; width:2px; height:2px; pointer-events:none; }
/* Ghost origin positioned in viewport coordinates for precise popover anchoring */
.expr-ghost-origin { position: fixed; width: 2px; height: 2px; pointer-events: none; z-index: 1; }
.expr-preview { margin-top: 6px; font-size: 12px; color:#475569; white-space: pre-wrap; word-break: break-word; }

/* Remove default focus outlines on editor */
.cm-editor { outline: none !important; }
.cm-editor *:focus { outline: none !important; }
.expr-host:focus, .expr-host *:focus { outline: none !important; }
/* Force-disable any focus outline inside the dialog editor (CodeMirror) */
.dialog-host .cm-focused { outline: none !important; outline-offset: 0 !important; box-shadow: none !important; }
.dialog-host .cm-editor.cm-focused { outline: none !important; outline-offset: 0 !important; box-shadow: none !important; }
/* Increase specificity through modal container in case of stronger defaults */
:host ::ng-deep .ant-modal .cm-focused { outline: none !important; outline-offset: 0 !important; box-shadow: none !important; }
:host ::ng-deep .ant-modal .cm-editor.cm-focused { outline: none !important; outline-offset: 0 !important; box-shadow: none !important; }
